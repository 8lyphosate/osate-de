rules = (
	{ match = 
		"!focused && class_g !?= 'rofi' &&" 
		"class_g !?= 'dunst'";
		shadow = false;
	},
	{ match = 
		"_NET_WM_STATE@[*] *= '_NET_WM_STATE_HIDDEN'"; 
	opacity = 0; 
  	},
	{ match = 
		"class_g != 'Alacritty' &&"
		"class_g != 'Rofi' &&"
		"class_g != 'topbar-popup' &&"
		"class_g != 'Dunst' &&"
		"class_g != 'i3-frame'"; 
		blur-background = false; 
		transparent_clipping = false; 
	},
	{ match = 
		"window_type != 'normal' &&"
		"window_type != 'notification'";
		animations = (
			{
				triggers = [ 
					"open", "show", "close", "hide", "geometry" 
				];
        			duration = 0;
			},
    		);
	},
)

animations = (
	{
		triggers = [ "open" ];
		preset = "appear";	
		scale = 0.75;
		duration = 0.25;
	},
	{
		triggers = [ "show" ];
		preset = "appear";
		scale = 0.95;
   		duration = 0.25;
	},
     	{
        	triggers = [ "close" ];
        	preset = "disappear";
		scale = 0.90;
        	duration = 0.25;
	},
	{
		triggers = [ "hide" ];
        	preset = "disappear";
		scale = 0.95;
        	duration = 0.25;
	},
	{
		triggers = ["geometry"];
    		scale-x = {
      		curve = "cubic-bezier(.25,.1,.25,1)";
      		duration = 0.25;
      		start = "window-width-before / window-width";
      		end = 1;
	}
	scale-y = {
      		curve = "cubic-bezier(.25,.1,.25,1)";
      		duration = 0.25;
      		start = "window-height-before / window-height";
      		end = 1;
	}
	offset-x = {
		curve = "cubic-bezier(.25,.1,.25,1)";
      		duration = 0.25;
      		start = "window-x-before - window-x";
      		end = 0;
	}
    	offset-y = {
      		curve = "cubic-bezier(.25,.1,.25,1)";
      		duration = 0.25;
      		start = "window-y-before - window-y";
      		end = 0;
	}

	shadow-scale-x = "scale-x";
    	shadow-scale-y = "scale-y";
    	shadow-offset-x = "offset-x";
    	shadow-offset-y = "offset-y";
  	}
)

shadow = true;
shadow-radius = 15;
shadow-opacity = 0.35
shadow-offset-x = -15;
shadow-offset-y = -15;
shadow-color = "#ffffff"

blur: {
	method = "dual_kawase";
  	size = 20;
  	strength = 5;
  	kernel = "3x3box";
}

transparent-clipping = false

backend = "glx"; # xrender, glx, egl, xr_glx_hybrid
xrender-sync-fence = true # Draw calls finished before picom starts drawing; Needed on NVIDIA drivers w/ GLX for some users?
unredir-if-possible = true

# Window types: unknown, desktop, dock, toolbar, menu, utility, splash, dialog, normal, dropdown_menu, popup_menu, tooltip, notification, combo, dnd
# Window type options: fade, shadow, opacity, focus, full-shadow, clip-shadow-above, redir-ignore 

daemon = false
dithered-present = false;
vsync = true;
no-use-damage = false; # Redraw entire screen
use-damage = true; # Redrew part of screen that changes
log-level = "warn";
