rules = (
  { match = 
    "!focused && class_g !?= 'rofi' && class_g !?= 'dunst' && class_g !?= 'jgmenu'";
    shadow = false;
   # blur-background = false; 
  },
  { match = "class_g ?= 'polybar'"; blur-background = false; },
  { match = 
    "_NET_WM_STATE@[*] *= '_NET_WM_STATE_HIDDEN'"; 
    opacity = 0; 
  },
  { match = 
    "class_g = 'slop' || window_type = 'desktop' || window_type = 'dock' || role = 'xborder' || window_type = 'popup_menu' || window_type = 'dropdown_menu' || window_type = 'tooltip' || window_type = 'menu' || window_type = 'toolbar' || window_type = 'utility'"; 
    blur_background = false; 
    transparent_clipping = false;
  },
  { match = "class_g ?= 'jgmenu'"; 
    animations = ( 
      { triggers = [ "open", "show" ]; preset = "slide-in"; direction = "left"; }, 
      { triggers = [ "close", "hide" ]; preset = "slide-out"; direction = "left"; },
    ) 
  },
)

animations = (
  {
    triggers = [ "open" ];
    preset = "appear"	
    scale = 0.75;
    duration = 0.25;
  },
  {
    triggers = [ "show" ];
    preset = "appear";
    scale = 0.95;
    duration = 0.25;
  },
     {
        triggers = [ "close" ];
        preset = "disappear";
	scale = 0.90;
        duration = 0.25;
     },
     {
        triggers = [ "hide" ];
        preset = "disappear";
	scale = 0.95;
        duration = 0.25;
     },
  {
    triggers = ["geometry"]
    scale-x = {
      curve = "cubic-bezier(.25,.1,.25,1)";
      duration = 0.25;
      start = "window-width-before / window-width";
      end = 1;
    }
    scale-y = {
      curve = "cubic-bezier(.25,.1,.25,1)";
      duration = 0.25;
      start = "window-height-before / window-height";
      end = 1;
    }
    offset-x = {
      curve = "cubic-bezier(.25,.1,.25,1)";
      duration = 0.25;
      start = "window-x-before - window-x";
      end = 0;
    }
    offset-y = {
      curve = "cubic-bezier(.25,.1,.25,1)";
      duration = 0.25;
      start = "window-y-before - window-y";
      end = 0;
    }

    shadow-scale-x = "scale-x";
    shadow-scale-y = "scale-y";
    shadow-offset-x = "offset-x";
    shadow-offset-y = "offset-y";
  }
)

shadow = true;
shadow-radius = 15;
shadow-opacity = 0.35
shadow-offset-x = -15;
shadow-offset-y = -15;
shadow-color = "#ffffff"

fading = false;
fade-in-step = 0.03;
fade-out-step = 0.03;
fade-delta = 4
no-fading-openclose = false

corner-radius = 0;

blur: {
  method = "dual_kawase";
  size = 20;
  strength = 2;
  kernel = "3x3box";
}

transparent-clipping = false

backend = "glx"; # xrender, glx, egl, xr_glx_hybrid
xrender-sync-fence = true # Draw calls finished before picom starts drawing; Needed on NVIDIA drivers w/ GLX for some users?

# Window types: unknown, desktop, dock, toolbar, menu, utility, splash, dialog, normal, dropdown_menu, popup_menu, tooltip, notification, combo, dnd
# Window type options: fade, shadow, opacity, focus, full-shadow, clip-shadow-above, redir-ignore 

daemon = false
dithered-present = false;
vsync = true;
no-use-damage = false; # Redraw entire screen
use-damage = true; # Redrew part of screen that changes

#window-shader-fg = "~/scripts/picom-shaders/Artistic/bloom.glsl"
#window-shader-fg-rule = [
#   "'~/scripts/picom-shaders/Artistic/single_value_range_transparency_gradient.glsl':class_g = 'firefox'"
#]
# force-win-blend = false

# max-brightness = 1.0

log-level = "warn";
# log-file = "/path/to/your/log/file"
